theme(
plot.title = element_text(color="Black", size=8)
)
plot1
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "red", high ="green",
name = "Cases(#)",label = scales::comma,
limits = c(0,1000)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "lightred", high ="green",
name = "Cases(#)",label = scales::comma,
limits = c(0,1000)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "yellow", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,1000)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "yellow", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
## Creating a df of just the cases the week after 3/17
weekafter <- data.frame(Finaldata) %>% filter(Day >= as.Date("2020-03-17"))
plot1
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
plot2<-plot_usmap(data = weekafter, values = "positive", color = "white") +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,1000)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases After 3/17") +
theme(
plot.title = element_text(color="Black", size=5)
)
plot2
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white", labels=TRUE) +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white", labels=TRUE, size=3) +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white", labels=TRUE, font=3) +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white", labels=TRUE, size=9) +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
# The number of Positive Covid Cases, comparison before and after the China Virus announcement
grid.arrange(plot1, plot2, ncol=2)
## Creating a df of just the cases the week before 3/17
weekbefore <- data.frame(Finaldata) %>% filter(Day <= as.Date("2020-03-17"))
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
plot1
## Creating a df of just the cases the week after 3/17
weekafter <- data.frame(Finaldata) %>% filter(Day >= as.Date("2020-03-17"))
plot2<-plot_usmap(data = weekafter, values = "positive", color = "white") +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,10000)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases After 3/17") +
theme(
plot.title = element_text(color="Black", size=5)
)
plot2
# The number of Positive Covid Cases, comparison before and after the China Virus announcement
grid.arrange(plot1, plot2, ncol=2)
## Creating a df of just the cases the week before 3/17
weekbefore <- data.frame(Finaldata) %>% filter(Day <= as.Date("2020-03-17"))
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
## Creating a df of just the cases the week after 3/17
weekafter <- data.frame(Finaldata) %>% filter(Day >= as.Date("2020-03-17"))
plot2<-plot_usmap(data = weekafter, values = "positive", color = "white") +
scale_fill_continuous(low = "blue", high ="red",
name = "Cases(#)",label = scales::comma,
limits = c(0,10000)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases After 3/17") +
theme(
plot.title = element_text(color="Black", size=5)
)
# The number of Positive Covid Cases, comparison before and after the China Virus announcement
grid.arrange(plot1, plot2, ncol=2)
## Creating a df of just the cases the week before 3/17
weekbefore <- data.frame(Finaldata) %>% filter(Day <= as.Date("2020-03-17"))
plot1<- plot_usmap(data = weekbefore, values = "positive", color = "white") +
scale_fill_continuous(low = "sky blue", high ="blue",
name = "Cases(#)",label = scales::comma,
limits = c(0,500)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases Before 3/17") +
theme(
plot.title = element_text(color="Black", size=8)
)
## Creating a df of just the cases the week after 3/17
weekafter <- data.frame(Finaldata) %>% filter(Day >= as.Date("2020-03-17"))
plot2<-plot_usmap(data = weekafter, values = "positive", color = "white") +
scale_fill_continuous(low = "sky blue", high ="red",
name = "Cases(#)",label = scales::comma,
limits = c(0,10000)) +
theme(legend.position = "right")+ ggtitle("# of COVID Cases After 3/17") +
theme(
plot.title = element_text(color="Black", size=5)
)
# The number of Positive Covid Cases, comparison before and after the China Virus announcement
grid.arrange(plot1, plot2, ncol=2)
install.packages("ggdag")
devtools::install_github("malcolmbarrett/ggdag")
library("ggdag")
install.packages("ggdag")
library("ggdag")
require("ggdag")
```{r, warning=FALSE}
install.packages("ggdag")
require("ggdag")
tidy_ggdag <- dagify(
y ~ x + z2 + w2 + w1,
x ~ z1 + w1 + w2,
z1 ~ w1 + v,
z2 ~ w2 + v,
w1 ~~ w2, # bidirected path
exposure = "x",
outcome = "y"
) %>%
tidy_dagitty()
require("dplyr")
tidy_ggdag <- dagify(
y ~ x + z2 + w2 + w1,
x ~ z1 + w1 + w2,
z1 ~ w1 + v,
z2 ~ w2 + v,
w1 ~~ w2, # bidirected path
exposure = "x",
outcome = "y"
) %>%
tidy_dagitty()
install.packages("ggdag")
tidy_ggdag <- dagify(
y ~ x + z2 + w2 + w1,
x ~ z1 + w1 + w2,
z1 ~ w1 + v,
z2 ~ w2 + v,
w1 ~~ w2, # bidirected path
exposure = "x",
outcome = "y"
) %>%
tidy_dagitty()
require(dagitty)
require(ggdag)
tidy_ggdag <- dagify(
y ~ x + z2 + w2 + w1,
x ~ z1 + w1 + w2,
z1 ~ w1 + v,
z2 ~ w2 + v,
w1 ~~ w2, # bidirected path
exposure = "x",
outcome = "y"
) %>%
tidy_dagitty()
library(ggdag)
remove.packages(ggplot2)
remove.packages("ggplot2")
library("ggdag")
install.packages("ggdag")
install.packages("ggdag")
tidy_ggdag <- dagify(
y ~ x + z2 + w2 + w1,
x ~ z1 + w1 + w2,
z1 ~ w1 + v,
z2 ~ w2 + v,
w1 ~~ w2, # bidirected path
exposure = "x",
outcome = "y"
) %>%
tidy_dagitty()
library(dplyr)
tidy_ggdag <- dagify(
y ~ x + z2 + w2 + w1,
x ~ z1 + w1 + w2,
z1 ~ w1 + v,
z2 ~ w2 + v,
w1 ~~ w2, # bidirected path
exposure = "x",
outcome = "y"
) %>%
tidy_dagitty()
dagitty::dagify(y~x)
dagify(y~x)
library(ggdag)
library("ggdag")
install.packages("ggdag")
library("ggdag")
library("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggm")
View(google_ts)
View(Finaldata)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
library(tidyverse)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(ggmap)
library(ggmap)
library(rlang)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(ggmap)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
# library(ggmap)
library(viridis)
library(rgdal)
library(gridExtra)
library(plotly)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
# library(ggmap)
library(viridis)
library(rgdal)
library(gridExtra)
# library(plotly)
require(janitor)
require(reshape2)
require(tidyr)
require(rstan)
require(rstanarm)
require(bayesplot)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
Finaldata<- read.csv("time_series_final_Data.csv")
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
set.seed(454)
Finaldata<-
Finaldata%>%
mutate(Day=as.numeric(Day))
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
names(Finaldata)
names(Finaldata)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
installed.packages("scales")
library(scales)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
install.pacakages("scales")
install.packages("scales")
install.packages("scales")
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
install.packages("scales")
install.packages("scales")
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
install.packages("scales")
install.packages("scales")
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
install.packages("scales")
install.packages("scales")
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
install.packages("scales")
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
library(scales)
library(tidyverse)
library(scales)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
set.seed(454)
Finaldata<-
Finaldata%>%
mutate(Day=as.numeric(Day))
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
require(rstan)
require(rstanarm)
model_2 <- stan_glm(
ChinaVirusInterest ~ 1,
data = sleep, family = gaussian,
chains = 4, iter = 5000*2
)
load("Finaldata")
load("Finaldata.csv")
load("Finaldata.Rdata")
read.csv("Finaldata")
read.csv("Finaldata.csv")
View(Finaldata)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(ggmap)
library(plotly)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
# library(tidyverse)
# library(ggmap)
library(viridis)
library(rgdal)
library(gridExtra)
# library(plotly)
require(janitor)
require(reshape2)
require(tidyr)
require(rstan)
require(rstanarm)
require(bayesplot)
Finaldata<- read.csv("time_series_final_Data.csv")
google<-read.csv("Google/googlefinal.csv")
names(google)
google <- google %>%  select(-c(X.1))
Finaldata <- Finaldata %>% select(-c(X))
Finaldata <- Finaldata %>% mutate(Day= as.Date(Day))
library(plotly)
library(rlang)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
update.packages("rland")
update.packages("rlang")
library(dplyr)
update.packages(rlang)
update.packages("rlang")
library(rlang)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(rlang)
library(dplyr)
library(usmap)
library(maps)
library(ggplot2)
library(tidyverse)
library(tidyverse)
unistall.packages("tidyverse")
library(plyr)
uninstall.packages
installr: install.packages("installr")
install.packages("installr")
library(installr)
updateR()
